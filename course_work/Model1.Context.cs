//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace course_work
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HotelEntities : DbContext
    {
        public HotelEntities()
            : base("name=HotelEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<@class> @class { get; set; }
        public virtual DbSet<privilege> privilege { get; set; }
        public virtual DbSet<reservations> reservations { get; set; }
        public virtual DbSet<rooms> rooms { get; set; }
        public virtual DbSet<size> size { get; set; }
        public virtual DbSet<users> users { get; set; }
    
        public virtual int sp_DeleteReservationsUser(Nullable<int> reservationId)
        {
            var reservationIdParameter = reservationId.HasValue ?
                new ObjectParameter("reservationId", reservationId) :
                new ObjectParameter("reservationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteReservationsUser", reservationIdParameter);
        }
    
        public virtual int sp_DeleteRooms(Nullable<int> roomId)
        {
            var roomIdParameter = roomId.HasValue ?
                new ObjectParameter("roomId", roomId) :
                new ObjectParameter("roomId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteRooms", roomIdParameter);
        }
    
        public virtual int sp_InsertReservations(Nullable<int> userId, Nullable<int> roomId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<decimal> price, ObjectParameter reservationId, ObjectParameter total)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var roomIdParameter = roomId.HasValue ?
                new ObjectParameter("roomId", roomId) :
                new ObjectParameter("roomId", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertReservations", userIdParameter, roomIdParameter, startDateParameter, endDateParameter, priceParameter, reservationId, total);
        }
    
        public virtual int sp_InsertRooms(string roomClass, string roomSize, byte[] photo, Nullable<int> price, ObjectParameter roomId)
        {
            var roomClassParameter = roomClass != null ?
                new ObjectParameter("roomClass", roomClass) :
                new ObjectParameter("roomClass", typeof(string));
    
            var roomSizeParameter = roomSize != null ?
                new ObjectParameter("roomSize", roomSize) :
                new ObjectParameter("roomSize", typeof(string));
    
            var photoParameter = photo != null ?
                new ObjectParameter("photo", photo) :
                new ObjectParameter("photo", typeof(byte[]));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertRooms", roomClassParameter, roomSizeParameter, photoParameter, priceParameter, roomId);
        }
    
        public virtual int sp_InsertUsersRegestration(string username, string password, string name, string surname, string email, Nullable<decimal> phone, ObjectParameter userId)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("surname", surname) :
                new ObjectParameter("surname", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertUsersRegestration", usernameParameter, passwordParameter, nameParameter, surnameParameter, emailParameter, phoneParameter, userId);
        }
    
        public virtual ObjectResult<sp_SelectReservations_Result> sp_SelectReservations()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectReservations_Result>("sp_SelectReservations");
        }
    
        public virtual ObjectResult<sp_SelectReservationsAdmin_Result> sp_SelectReservationsAdmin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectReservationsAdmin_Result>("sp_SelectReservationsAdmin");
        }
    
        public virtual ObjectResult<sp_SelectReservationsDateRange_Result> sp_SelectReservationsDateRange(Nullable<int> room_id)
        {
            var room_idParameter = room_id.HasValue ?
                new ObjectParameter("room_id", room_id) :
                new ObjectParameter("room_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectReservationsDateRange_Result>("sp_SelectReservationsDateRange", room_idParameter);
        }
    
        public virtual ObjectResult<sp_SelectReservationsUser_Result> sp_SelectReservationsUser(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectReservationsUser_Result>("sp_SelectReservationsUser", userIdParameter);
        }
    
        public virtual ObjectResult<sp_SelectRooms_Result> sp_SelectRooms()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectRooms_Result>("sp_SelectRooms");
        }
    
        public virtual ObjectResult<sp_SelectUsersLogin_Result> sp_SelectUsersLogin(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectUsersLogin_Result>("sp_SelectUsersLogin", usernameParameter);
        }
    
        public virtual ObjectResult<string> sp_SelectUsersRegestration(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_SelectUsersRegestration", usernameParameter);
        }
    
        public virtual int sp_UpdateRooms(string roomClass, string roomSize, byte[] photo, Nullable<int> price, Nullable<int> roomId)
        {
            var roomClassParameter = roomClass != null ?
                new ObjectParameter("roomClass", roomClass) :
                new ObjectParameter("roomClass", typeof(string));
    
            var roomSizeParameter = roomSize != null ?
                new ObjectParameter("roomSize", roomSize) :
                new ObjectParameter("roomSize", typeof(string));
    
            var photoParameter = photo != null ?
                new ObjectParameter("photo", photo) :
                new ObjectParameter("photo", typeof(byte[]));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(int));
    
            var roomIdParameter = roomId.HasValue ?
                new ObjectParameter("roomId", roomId) :
                new ObjectParameter("roomId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateRooms", roomClassParameter, roomSizeParameter, photoParameter, priceParameter, roomIdParameter);
        }
    }
}
